import{_ as i,o as e,c as l,e as a}from"./app-e3dbf12f.js";const t={},o=a('<h1 id="what-is-ts" tabindex="-1"><a class="header-anchor" href="#what-is-ts" aria-hidden="true">#</a> What is TS</h1><h2 id="all-or-nothing" tabindex="-1"><a class="header-anchor" href="#all-or-nothing" aria-hidden="true">#</a> All or nothing</h2><p>Typescript 可以被渐进使用</p><h2 id="typescript-的目的" tabindex="-1"><a class="header-anchor" href="#typescript-的目的" aria-hidden="true">#</a> Typescript 的目的</h2><ul><li><p>类型定义 Type Something</p><ul><li><p>type variable</p><ul><li>primitive <ul><li>number</li><li>string</li><li>boolean</li></ul></li><li>object <ul><li>array</li><li>object</li></ul></li></ul></li><li><p>type function</p><ul><li>argument</li><li>return type</li></ul></li></ul></li><li><p>Type from types</p></li><li><p>autocomplete</p></li></ul><h2 id="comparison" tabindex="-1"><a class="header-anchor" href="#comparison" aria-hidden="true">#</a> Comparison</h2><ul><li><p><code>interface</code> vs <code>type</code></p><ul><li>grammar</li><li>interchangeable</li><li>oop</li></ul></li><li><p><code>void</code> vs <code>never</code></p></li><li><p><code>&amp;</code> vs <code>|</code></p><ul><li>x</li><li>Union</li></ul></li></ul>',7),r=[o];function c(n,p){return e(),l("div",null,r)}const d=i(t,[["render",c],["__file","what-is-ts.html.vue"]]);export{d as default};
