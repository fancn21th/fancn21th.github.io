import{_ as t,r as e,o as p,c as o,a as n,b as s,d as l,e as c}from"./app-e3dbf12f.js";const i={},u=n("h1",{id:"next",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#next","aria-hidden":"true"},"#"),s(" Next")],-1),r={href:"https://reactjs.org/docs/create-a-new-react-app.html#recommended-toolchains",target:"_blank",rel:"noopener noreferrer"},d=n("code",null,"Next",-1),k=n("code",null,"Next",-1),v=n("code",null,"Gatsby",-1),m=n("code",null,"Remix",-1),h=n("code",null,"哲学",-1),b=c(`<div class="custom-container tip"><p class="custom-container-title">提示</p><p>If you’re building a server-rendered website with Node.js, try Next.js.</p><p>如果你要做 SSR （服务端渲染）你可以试试 <code>Next</code></p></div><h2 id="dev-env-setup" tabindex="-1"><a class="header-anchor" href="#dev-env-setup" aria-hidden="true">#</a> Dev Env Setup</h2><ul><li>create-next-app</li></ul><h2 id="navigation" tabindex="-1"><a class="header-anchor" href="#navigation" aria-hidden="true">#</a> Navigation</h2><ul><li><p>HTML A Tag</p><ul><li>Reload Page</li></ul></li><li><p>Link Component</p><ul><li>Not Reload</li></ul><div class="language-tsx line-numbers-mode" data-ext="tsx"><pre class="language-tsx"><code><span class="token keyword">import</span> Link <span class="token keyword">from</span> <span class="token string">&quot;next/link&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><h2 id="dynamic-page" tabindex="-1"><a class="header-anchor" href="#dynamic-page" aria-hidden="true">#</a> Dynamic Page</h2><ul><li><p>useRouter hook</p><div class="language-tsx line-numbers-mode" data-ext="tsx"><pre class="language-tsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useRouter <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;next/router&quot;</span><span class="token punctuation">;</span>

<span class="token comment">// ... FC</span>

<span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token function">useRouter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> sameAsFileName <span class="token punctuation">}</span> <span class="token operator">=</span> router<span class="token punctuation">.</span>query<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="static-files" tabindex="-1"><a class="header-anchor" href="#static-files" aria-hidden="true">#</a> Static Files</h3><ul><li>public folder</li></ul><h2 id="image-component" tabindex="-1"><a class="header-anchor" href="#image-component" aria-hidden="true">#</a> Image Component</h2><blockquote><p>Key Feature with Performance Optimization</p></blockquote><ul><li>local image</li><li>remote image <ul><li>config is necessary</li></ul></li></ul><h2 id="head-component" tabindex="-1"><a class="header-anchor" href="#head-component" aria-hidden="true">#</a> Head Component</h2><blockquote><p>same as Helmet component in other framework like <code>Gatsby</code></p></blockquote><ul><li><p>Head</p><div class="language-tsx line-numbers-mode" data-ext="tsx"><pre class="language-tsx"><code><span class="token keyword">import</span> Head <span class="token keyword">from</span> <span class="token string">&quot;next/head&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>avoid duplication <ul><li>key</li></ul></li></ul></li></ul><h2 id="app-component" tabindex="-1"><a class="header-anchor" href="#app-component" aria-hidden="true">#</a> App Component</h2><ul><li><code>_app.tsx</code></li></ul><blockquote><p>similar with index.tsx in other framework</p></blockquote><div class="language-tsx line-numbers-mode" data-ext="tsx"><pre class="language-tsx"><code><span class="token keyword">import</span> <span class="token keyword">type</span> <span class="token punctuation">{</span> AppProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;next/app&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">{</span> Component<span class="token punctuation">,</span> pageProps <span class="token punctuation">}</span><span class="token operator">:</span> AppProps<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token punctuation">{</span><span class="token comment">/* The Component is Page Component */</span><span class="token punctuation">}</span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Component</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>pageProps<span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="document-component" tabindex="-1"><a class="header-anchor" href="#document-component" aria-hidden="true">#</a> Document Component</h2><ul><li><p><code>_document.tsx</code></p><ul><li>running in server side</li></ul></li></ul><div class="language-tsx line-numbers-mode" data-ext="tsx"><pre class="language-tsx"><code><span class="token keyword">import</span> Document<span class="token punctuation">,</span> <span class="token punctuation">{</span> Html<span class="token punctuation">,</span> Head<span class="token punctuation">,</span> Main<span class="token punctuation">,</span> NextScript <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;next/document&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">MyDocument</span> <span class="token keyword">extends</span> <span class="token class-name">Document</span> <span class="token punctuation">{</span>
  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Html</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Head</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Main</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">NextScript</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Html</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> MyDocument<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="css" tabindex="-1"><a class="header-anchor" href="#css" aria-hidden="true">#</a> CSS</h2><h3 id="app-level" tabindex="-1"><a class="header-anchor" href="#app-level" aria-hidden="true">#</a> App Level</h3><ul><li>add css into <code>_app.tsx</code></li></ul><h3 id="component-level" tabindex="-1"><a class="header-anchor" href="#component-level" aria-hidden="true">#</a> Component Level</h3><ul><li><p>css module</p><ul><li>common css grammar</li><li>use as object literal</li></ul></li></ul><h3 id="inline-level" tabindex="-1"><a class="header-anchor" href="#inline-level" aria-hidden="true">#</a> Inline Level</h3><ul><li><p>css in js</p><div class="language-tsx line-numbers-mode" data-ext="tsx"><pre class="language-tsx"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>
  <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
    display<span class="token operator">:</span> <span class="token string">&quot;flex&quot;</span><span class="token punctuation">,</span>
    flexDirection<span class="token operator">:</span> <span class="token string">&quot;row&quot;</span><span class="token punctuation">,</span>
    rowGap<span class="token operator">:</span> <span class="token string">&quot;24px&quot;</span><span class="token punctuation">,</span>
    justifyContent<span class="token operator">:</span> <span class="token string">&quot;space-between&quot;</span><span class="token punctuation">,</span>
    alignItems<span class="token operator">:</span> <span class="token string">&quot;center&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
<span class="token punctuation">&gt;</span></span><span class="token plain-text">
  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="layout" tabindex="-1"><a class="header-anchor" href="#layout" aria-hidden="true">#</a> Layout</h2><h3 id="app-level-1" tabindex="-1"><a class="header-anchor" href="#app-level-1" aria-hidden="true">#</a> App Level</h3><ul><li>common layout component <ul><li>injected into <code>_app.tsx</code></li></ul></li></ul><h3 id="page-level" tabindex="-1"><a class="header-anchor" href="#page-level" aria-hidden="true">#</a> Page Level</h3><ul><li><code>getLayout</code> method</li></ul><blockquote><p>this is not official way</p></blockquote><div class="language-tsx line-numbers-mode" data-ext="tsx"><pre class="language-tsx"><code><span class="token keyword">import</span> <span class="token keyword">type</span> <span class="token punctuation">{</span> ReactNode <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;react&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Heading <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@chakra-ui/react&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> Layout <span class="token keyword">from</span> <span class="token string">&quot;../src/components/layout&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">Home</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Heading</span></span> <span class="token attr-name">w</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>full<span class="token punctuation">&quot;</span></span> <span class="token attr-name">textAlign</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>center<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      This is our homepage content!
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Heading</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

Home<span class="token punctuation">.</span><span class="token function-variable function">getLayout</span> <span class="token operator">=</span> <span class="token punctuation">(</span>page<span class="token operator">:</span> ReactNode<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Layout</span></span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>page<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Layout</span></span><span class="token punctuation">&gt;</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> Home<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>getLayout</code> method invoked in <code>_app.tsx</code></li></ul><div class="language-tsx line-numbers-mode" data-ext="tsx"><pre class="language-tsx"><code><span class="token keyword">import</span> <span class="token keyword">type</span> <span class="token punctuation">{</span> ReactNode <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;react&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token keyword">type</span> <span class="token punctuation">{</span> AppProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;next/app&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token keyword">type</span> <span class="token punctuation">{</span> NextPage <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;next&quot;</span><span class="token punctuation">;</span>

<span class="token comment">// import the custom layout</span>
<span class="token keyword">import</span> Layout <span class="token keyword">from</span> <span class="token string">&quot;../src/components/layout&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">NextPageWithLayout</span> <span class="token operator">=</span> NextPage <span class="token operator">&amp;</span> <span class="token punctuation">{</span>
  getLayout<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span>page<span class="token operator">:</span> ReactNode<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> ReactNode<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">AppPropsWithLayout</span> <span class="token operator">=</span> AppProps <span class="token operator">&amp;</span> <span class="token punctuation">{</span>
  Component<span class="token operator">:</span> NextPageWithLayout<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> Component<span class="token punctuation">,</span> pageProps <span class="token punctuation">}</span><span class="token operator">:</span> AppPropsWithLayout<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// ✍️ wrap the Component with the custom layout</span>
  <span class="token keyword">const</span> getLayout <span class="token operator">=</span> Component<span class="token punctuation">.</span>getLayout <span class="token operator">??</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>page<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> page<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token punctuation">{</span><span class="token function">getLayout</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Component</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>pageProps<span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span><span class="token punctuation">)</span><span class="token punctuation">}</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="ssg-vs-isr-vs-ssr" tabindex="-1"><a class="header-anchor" href="#ssg-vs-isr-vs-ssr" aria-hidden="true">#</a> SSG vs ISR vs SSR</h2><div class="custom-container tip"><p class="custom-container-title">提示</p><ul><li>SSG: Static Site Generation</li><li>SSR: Server Side Rendering</li><li>ISG: Incremental Static Regeneration</li></ul></div><div class="custom-container warning"><p class="custom-container-title">注意</p><ul><li>Rendering 是指 HTML 标签 的创建过程</li></ul></div><h3 id="ssg" tabindex="-1"><a class="header-anchor" href="#ssg" aria-hidden="true">#</a> SSG</h3><ul><li>CI/CD machine build and deploy the static site bundle to server/cdn</li><li>Website is pre-built</li><li>Data is static too unless rebuild from CI/CD machine</li></ul><h3 id="ssr" tabindex="-1"><a class="header-anchor" href="#ssr" aria-hidden="true">#</a> SSR</h3><ul><li>Website is built at runtime <ul><li>Query data from DB</li><li>Generate HTML on the fly</li><li>Pre-Built is opt</li><li>Cache</li></ul></li><li>Server provide not only static assets but dynamic content</li></ul><h3 id="isr" tabindex="-1"><a class="header-anchor" href="#isr" aria-hidden="true">#</a> ISR</h3><ul><li>Partially SSG</li><li>Partially SSR</li><li>Versioning</li><li>Periodically</li></ul><h3 id="comparison" tabindex="-1"><a class="header-anchor" href="#comparison" aria-hidden="true">#</a> Comparison</h3><ul><li><p>数据</p><ul><li><p>更新的频率</p><table><thead><tr><th rowspan="2">类型</th><th colspan="2">服务器</th><th rowspan="2">浏览器</th></tr><tr><th>编译时</th><th>运行时</th></tr></thead><tbody><tr><td>SPA</td><td></td><td>Data</td><td></td></tr><tr><td>SSG</td><td>Data</td><td></td><td></td></tr><tr><td>SSR</td><td></td><td>Data</td><td></td></tr><tr><td>ISG</td><td colspan="2">Data ⏰ 🔄</td><td></td></tr></tbody></table></li></ul></li><li><p>HTML</p><ul><li><p>是在什么地方</p></li><li><p>什么时间渲染的</p><table><thead><tr><th rowspan="2">类型</th><th colspan="2">服务器</th><th rowspan="2">浏览器</th></tr><tr><th>编译时</th><th>运行时</th></tr></thead><tbody><tr><td>SPA</td><td></td><td></td><td>HTML</td></tr><tr><td>SSG</td><td>HTML</td><td></td><td></td></tr><tr><td>SSR</td><td></td><td>HTML</td><td></td></tr><tr><td>ISG</td><td colspan="2">HTML ⏰ 🔄</td><td></td></tr></tbody></table></li></ul></li></ul><h2 id="ssg-1" tabindex="-1"><a class="header-anchor" href="#ssg-1" aria-hidden="true">#</a> SSG</h2><ul><li><code>GetStaticProps</code></li></ul><blockquote><p>invoked at server side</p></blockquote><div class="language-tsx line-numbers-mode" data-ext="tsx"><pre class="language-tsx"><code><span class="token keyword">import</span> <span class="token keyword">type</span> <span class="token punctuation">{</span> GetStaticProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;next&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">Props</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  foo<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">Home</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> foo <span class="token punctuation">}</span><span class="token operator">:</span> Props<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">List</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token punctuation">{</span>foo<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>foo<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
      <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">List</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> getStaticProps<span class="token operator">:</span> GetStaticProps<span class="token operator">&lt;</span>Props<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>context<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    props<span class="token operator">:</span> <span class="token punctuation">{</span>
      foo<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;b&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;c&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> Home<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>GetStaticPaths</code></li></ul><blockquote><p>generate static page @build time</p></blockquote><h2 id="isr-1" tabindex="-1"><a class="header-anchor" href="#isr-1" aria-hidden="true">#</a> ISR</h2><ul><li><code>GetStaticProps</code><ul><li>revalidate</li></ul></li></ul><h2 id="ssr-1" tabindex="-1"><a class="header-anchor" href="#ssr-1" aria-hidden="true">#</a> SSR</h2><ul><li><code>getServerSideProps</code></li></ul><blockquote><p>generate static page @runtime on every request</p></blockquote><ul><li>vs <code>GetStaticProps</code><ul><li>context <ul><li>query</li><li>req <ul><li>header</li><li>cookie</li><li>auth</li></ul></li><li>res</li></ul></li></ul></li></ul><h2 id="api-route" tabindex="-1"><a class="header-anchor" href="#api-route" aria-hidden="true">#</a> API Route</h2>`,62);function g(y,x){const a=e("ExternalLinkIcon");return p(),o("div",null,[u,n("p",null,[n("a",r,[s("React"),l(a)]),s(" 官方网站给出了 "),d,s(" 的推荐建议。 但是 "),k,s(" 的野心不仅如此。 它和它的竞品 "),v,s(" 和 "),m,s(" 在目的上有高度的重叠，在实现上有不同的 "),h]),b])}const w=t(i,[["render",g],["__file","index.html.vue"]]);export{w as default};
