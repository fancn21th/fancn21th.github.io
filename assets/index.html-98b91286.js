import{_ as c,r as d,o as r,c as a,a as l,b as e,d as n,e as o}from"./app-e3dbf12f.js";const t={},u=o('<h1 id="angularjs" tabindex="-1"><a class="header-anchor" href="#angularjs" aria-hidden="true">#</a> AngularJS</h1><p>AngularJS 已经被遗忘在 现在前端研发的角落。 在 2022 年 还提及她，应该主要是有以下几个原因</p><ul><li>既有代码的维护</li><li>回顾 <code>2015 年</code> 左右的那次 <code>前端革命</code> (国内)</li></ul><h2 id="angualrjs-禅道-哲学" tabindex="-1"><a class="header-anchor" href="#angualrjs-禅道-哲学" aria-hidden="true">#</a> AngualrJS 禅道（哲学）</h2>',4),s={href:"https://code.angularjs.org/1.8.2/docs/guide/introduction#the-zen-of-angularjs",target:"_blank",rel:"noopener noreferrer"},p=l("code",null,"Google",-1),h=l("code",null,"抽象",-1),g=o('<p>在当时 大部分前端开发人员并不能很从容地 理解 <code>AngularJS</code> 的设计思想，以至于很容易开发出来 <code>极其</code> 难以维护的代码。这个即便是在大型商业应用上也并不罕见。</p><p>今天 在 <code>Vue</code> 和 <code>React</code> 已经成为前端开发主流的时代，回顾 <code>AngularJS</code> 里面的设计思想 不难在 <code>Vue</code> 和 <code>React</code> 里面找 相似的 <code>影子</code>。 以至于更容易理解 10 年前 Google 工程师的 <code>超前</code> 设计思想。</p><p>这也反过来说明, 一个好的框架 必须有 简洁易于理解的 <code>接口设计</code> 和 <code>使用方法</code>。 毕竟对于新手而言，<code>原理</code> 并不重要，怎么 <code>容易上手</code> 又 <code>不易用错</code> 才是关键。</p><h2 id="现代前端先驱" tabindex="-1"><a class="header-anchor" href="#现代前端先驱" aria-hidden="true">#</a> 现代前端先驱</h2><p>在 <code>AngularJS</code> 之前 <code>JQuery</code> 开发是主流。 现代前端开发的一些耳熟能详的主流技术名词， 在 10 年前已经有了雏形 甚至已经 足够完备。</p><ul><li><p>webpack 之前</p><ul><li>grunt</li><li>bower</li><li>grunt-nodemon</li><li>grunt-concurrent</li><li>gulp</li></ul></li><li><p>code splitting</p><ul><li>grunt-html2js</li></ul></li><li><p>spa router</p><ul><li>ui-router</li></ul></li><li><p>esm module 之前</p><ul><li>browserify modules</li><li>AMD style modules <ul><li>RequireJS</li></ul></li><li>NodeJS <ul><li>CommonJS</li></ul></li></ul></li><li><p>unit test</p><ul><li>Jasmine</li><li>Karma</li></ul></li><li><p>p2p test</p><ul><li>protractor</li></ul></li><li><p>mock server</p><ul><li>node</li></ul></li><li><p>no-loop challenge (不写 for 循环)</p><ul><li>🥴 10 年后的今天 初学者还是习惯用 <code>for</code> 循环来开发</li></ul></li></ul>',6);function _(m,f){const i=d("ExternalLinkIcon");return r(),a("div",null,[u,l("p",null,[l("a",s,[e("The Zen of AngularJS"),n(i)]),e(" 向我们展示了 "),p,e(" 工程师过剩的 "),h,e(" 能力。")]),g])}const x=c(t,[["render",_],["__file","index.html.vue"]]);export{x as default};
