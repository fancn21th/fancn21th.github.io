import{_ as l,r as p,o as i,c as o,a as n,b as a,d as t,e as s}from"./app-e3dbf12f.js";const c={},r=s('<h1 id="高级" tabindex="-1"><a class="header-anchor" href="#高级" aria-hidden="true">#</a> 高级</h1><h2 id="functional-组件" tabindex="-1"><a class="header-anchor" href="#functional-组件" aria-hidden="true">#</a> Functional 组件</h2><h3 id="why" tabindex="-1"><a class="header-anchor" href="#why" aria-hidden="true">#</a> Why ?</h3>',3),u=n("li",null,[n("p",null,"Functional 组件 没有 Instance 因此 开销更小")],-1),d=n("p",null,"适合作为 叶子节点 组件",-1),h={href:"https://github.com/vuejs/vue-router/blob/dev/src/components/view.js",target:"_blank",rel:"noopener noreferrer"},k=s(`<h3 id="use-cases" tabindex="-1"><a class="header-anchor" href="#use-cases" aria-hidden="true">#</a> Use Cases</h3><ul><li><p>Presentaional Component</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">functional</span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- ... --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>Wrapper Component</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&quot;smart-table&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">functional</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token literal-property property">props</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">items</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> Array <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">render</span><span class="token punctuation">(</span><span class="token parameter">h<span class="token punctuation">,</span> context</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>context<span class="token punctuation">.</span>props<span class="token punctuation">.</span>items<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span><span class="token punctuation">;</span>
      <span class="token function">h</span><span class="token punctuation">(</span>NormalTable<span class="token punctuation">,</span> context<span class="token punctuation">.</span>data<span class="token punctuation">,</span> context<span class="token punctuation">.</span>children<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">h</span><span class="token punctuation">(</span>EmptyTable<span class="token punctuation">,</span> context<span class="token punctuation">.</span>data<span class="token punctuation">,</span> context<span class="token punctuation">.</span>children<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="features" tabindex="-1"><a class="header-anchor" href="#features" aria-hidden="true">#</a> Features</h3><ul><li><p>has no</p><ul><li><p>data</p></li><li><p>computed</p></li><li><p>watcher</p></li><li><p>lifecycle</p></li><li><p>methods</p></li><li><p>template</p><ul><li>in <code>2.5.0+</code></li></ul><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">functional</span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- ... --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p>has</p><ul><li>props</li><li>attrs</li><li>events</li><li>slots</li><li>render func</li></ul></li><li><p>render</p><ul><li>h</li><li>context</li></ul></li></ul><h2 id="scoped-slots-render-props" tabindex="-1"><a class="header-anchor" href="#scoped-slots-render-props" aria-hidden="true">#</a> Scoped Slots + Render Props</h2><h3 id="why-1" tabindex="-1"><a class="header-anchor" href="#why-1" aria-hidden="true">#</a> Why?</h3><ul><li><p>Reusable</p><ul><li>Pass Props From <code>child</code> to <code>parent</code></li><li><code>child</code> becomes customizable and <code>parent</code> becomes reusable</li></ul></li></ul><h3 id="use-cases-1" tabindex="-1"><a class="header-anchor" href="#use-cases-1" aria-hidden="true">#</a> Use Cases</h3>`,8),v=n("p",null,[a("With "),n("code",null,"Template")],-1),m={href:"https://vue-multiselect.js.org/",target:"_blank",rel:"noopener noreferrer"},b=n("li",null,[n("p",null,[a("With "),n("code",null,"Render"),a(" Func")]),n("ul",null,[n("li",null,[n("code",null,"JSX"),a(" style")])]),n("p",null,[n("a",{href:""},"Vue-AutoSuggest")])],-1),f=s(`<h2 id="render-function" tabindex="-1"><a class="header-anchor" href="#render-function" aria-hidden="true">#</a> Render Function</h2><h3 id="why-2" tabindex="-1"><a class="header-anchor" href="#why-2" aria-hidden="true">#</a> Why?</h3><ul><li><p>combile the complex rendering logic into the same place</p><ul><li>previously defined in template and javascript</li></ul></li><li><p>nested template</p></li></ul><h3 id="vue-2-vs-vue-3" tabindex="-1"><a class="header-anchor" href="#vue-2-vs-vue-3" aria-hidden="true">#</a> Vue 2 vs Vue 3</h3><ul><li><p>Vue3</p><ul><li>Flat props structure</li><li>Globally impored <code>h</code> helper</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> h <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>

<span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">h</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&#39;foo&#39;</span><span class="token punctuation">,</span>
    <span class="token comment">// on-*  become event listener</span>
    <span class="token literal-property property">onClick</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>onClick
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&#39;hello&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="受控组件" tabindex="-1"><a class="header-anchor" href="#受控组件" aria-hidden="true">#</a> 受控组件</h2><h2 id="组件封装" tabindex="-1"><a class="header-anchor" href="#组件封装" aria-hidden="true">#</a> 组件封装</h2><h2 id="插槽" tabindex="-1"><a class="header-anchor" href="#插槽" aria-hidden="true">#</a> 插槽</h2><h2 id="render-方法" tabindex="-1"><a class="header-anchor" href="#render-方法" aria-hidden="true">#</a> Render 方法</h2><h2 id="data-provider-模式" tabindex="-1"><a class="header-anchor" href="#data-provider-模式" aria-hidden="true">#</a> Data Provider 模式</h2><h2 id="组合组件" tabindex="-1"><a class="header-anchor" href="#组合组件" aria-hidden="true">#</a> 组合组件</h2>`,11);function g(y,x){const e=p("ExternalLinkIcon");return i(),o("div",null,[r,n("ul",null,[u,n("li",null,[d,n("ul",null,[n("li",null,[n("a",h,[a("RouterView"),t(e)])])])])]),k,n("ul",null,[n("li",null,[v,n("p",null,[n("a",m,[a("Vue-MultiSelect"),t(e)])])]),b]),f])}const w=l(c,[["render",g],["__file","advanced.html.vue"]]);export{w as default};
