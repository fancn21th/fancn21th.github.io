import{_ as e,o as c,c as o,e as d}from"./app-e3dbf12f.js";const a={},t=d('<h1 id="前置条件" tabindex="-1"><a class="header-anchor" href="#前置条件" aria-hidden="true">#</a> 前置条件</h1><p>我一直认为前端的很多知识点是非常独立的， 就好比 <code>1+1=2</code> 和 <code>1+2+3...+100=?</code> 这样的关系。但事实上并不是如此。</p><p>多年来我一直没有深刻意识到在做前端培训的时候需要重视 <code>前置条件</code>。任何一个知识点，对于新人来说极大可能是 <code>不明所以</code> 的 或者说会 带来困扰。</p><p>当太多的 <code>不明所以</code> 积累 与 叠加在一起， 专注在 <code>知识点</code> 本身上会很困难。</p><p>所以在这个章节我会通过和同学们不断的沟通，补充完整学习前端知识的 <code>前置条件</code>。 减少学习中的困扰。</p><div class="custom-container tip"><p class="custom-container-title">提示</p><p>我依然觉得你不需要 <code>理解</code> 这些前置条件，而只是 <code>了解</code> 他们的目的 就可以继续你的学习。</p></div><h2 id="背景知识" tabindex="-1"><a class="header-anchor" href="#背景知识" aria-hidden="true">#</a> 背景知识</h2><p>事实证明 入门 <code>前端</code> 开发还是相对门槛较低。 计算机相关的专业知识，可以边工程实践逐步补充学习。</p><ul><li>HTML</li><li>CSS</li><li>Javascript</li></ul>',9),i=[t];function n(r,s){return c(),o("div",null,i)}const p=e(a,[["render",n],["__file","index.html.vue"]]);export{p as default};
