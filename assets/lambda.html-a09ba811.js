import{_ as o,r as l,o as r,c as i,a as e,b as n,d as a,e as t}from"./app-e3dbf12f.js";const c={},d=t('<h1 id="lambda" tabindex="-1"><a class="header-anchor" href="#lambda" aria-hidden="true">#</a> Lambda</h1><p>I believe in <code>learn by doing</code> these days. In order to create a real world <code>node.js</code> application. I decided to go through most key features of node by <code>creating a bunch of aws nodejs serverless lambda functions</code> as a warm-up.</p><p><code>Lambda</code> and <code>Node</code>, one stone two bird.</p><p>Here comes the every steps...</p><h2 id="serverless-com" tabindex="-1"><a class="header-anchor" href="#serverless-com" aria-hidden="true">#</a> Serverless.com</h2>',5),p={href:"https://www.serverless.com/",target:"_blank",rel:"noopener noreferrer"},u=e("a",{href:"egghead.io"},"egghead",-1),h=t(`<p>As to me I think it make sense to maintain the serverless function in <code>serverless</code> way. Just in case one day I will move it from <code>aws</code> to other cloud provider.</p><ul><li>Template</li></ul><p>You can start with a template as boilerplate by command line.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>serverless create <span class="token parameter variable">-t</span> <span class="token punctuation">[</span>template name<span class="token punctuation">]</span> <span class="token parameter variable">-p</span> <span class="token punctuation">[</span>service name<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,4),m={href:"https://github.com/serverless/examples",target:"_blank",rel:"noopener noreferrer"},b=e("code",null,"serverless",-1),v=e("h2",{id:"step-1-a-json-crud-service",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#step-1-a-json-crud-service","aria-hidden":"true"},"#"),n(" Step 1: A json crud service")],-1),_=e("p",null,"Firstly I want to create a service that I could CRUD a json object. Based on which a number of biz api shall be built.",-1),k=e("p",null,"So we have 2 todos as below.",-1),f=e("li",null,"a serverless function CRUD a javascript object.",-1),g={href:"https://docs.aws.amazon.com/AmazonS3/latest/userguide/GetStartedWithS3.html",target:"_blank",rel:"noopener noreferrer"},w={href:"https://github.com/serverless/examples/tree/v3/aws-node-fetch-file-and-store-in-s3",target:"_blank",rel:"noopener noreferrer"},y=t(`<ul><li>give it a test and it works like a charm</li></ul><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>You have to create a s3 bucket beforehand and update yml file accordingly</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">custom</span><span class="token punctuation">:</span>
  <span class="token key atrule">bucket</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>bucket name<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>also <a href="">IAM Role Permission</a> have to be put in the config file either.</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">provider</span><span class="token punctuation">:</span>
  <span class="token key atrule">name</span><span class="token punctuation">:</span> aws
  <span class="token key atrule">runtime</span><span class="token punctuation">:</span> nodejs14.x
  <span class="token key atrule">stage</span><span class="token punctuation">:</span> dev
  <span class="token key atrule">iam</span><span class="token punctuation">:</span>
    <span class="token key atrule">role</span><span class="token punctuation">:</span>
      <span class="token key atrule">statements</span><span class="token punctuation">:</span>
        <span class="token punctuation">-</span> <span class="token key atrule">Effect</span><span class="token punctuation">:</span> Allow
          <span class="token key atrule">Action</span><span class="token punctuation">:</span>
            <span class="token punctuation">-</span> s3<span class="token punctuation">:</span>GetObject
            <span class="token punctuation">-</span> s3<span class="token punctuation">:</span>GetObjectAcl
            <span class="token punctuation">-</span> s3<span class="token punctuation">:</span>PutObject
            <span class="token punctuation">-</span> s3<span class="token punctuation">:</span>PutObjectAcl
          <span class="token key atrule">Resource</span><span class="token punctuation">:</span> <span class="token string">&quot;arn:aws:s3:::\${self:custom.bucket}/*&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div>`,2),A={href:"https://github.com/fancn21th/0_218_AWS_LAMBDA_CRUD_JSON/commit/5a2d197b14a6719316765554588274382df6a30e",target:"_blank",rel:"noopener noreferrer"},I=e("p",null,[n("The "),e("code",null,"crud"),n(" service")],-1),S={href:"https://github.com/typicode/lowdb",target:"_blank",rel:"noopener noreferrer"},j=e("p",null,"I don't want to use any database yet since learning Node is why all it happens in the first place. A Json file hold on the entire application data should suffice. I assumed.",-1),x=e("p",null,"Besides I don't want to reinvent the wheel. After awhile I found this nice JSON database lib.",-1),N=e("code",null,"lowdb",-1),B={href:"https://github.com/fancn21th/0_218_AWS_LAMBDA_CRUD_JSON",target:"_blank",rel:"noopener noreferrer"},D=e("ul",null,[e("li",null,"adaptor")],-1),L=e("code",null,"s3 adaptor",-1),O={href:"https://github.com/nicekiwi/lowdb-adapter-aws-s3",target:"_blank",rel:"noopener noreferrer"},R=e("p",null,"I dived into the source code and found out that it may not meed my requirement sooner or later. So I decided to create it on my own.",-1),C={href:"https://github.com/fancn21th/0_218_AWS_LAMBDA_CRUD_JSON/blob/main/s3Adaptor.js",target:"_blank",rel:"noopener noreferrer"};function J(E,M){const s=l("ExternalLinkIcon");return r(),i("div",null,[d,e("p",null,[n("Let's start with "),e("a",p,[n("serverless"),a(s)]),n(", a framework that shows up a lot at "),u,n(".")]),h,e("p",null,[n("However I have to begin with "),e("a",m,[n("examples"),a(s)]),n(" due to some annoying issue that my default local "),b,n(" provider issue. ðŸ˜¡")]),v,e("ul",null,[e("li",null,[_,k,e("ul",null,[f,e("li",null,[n("a "),e("a",g,[n("S3"),a(s)]),n(" bucket hold on the json file.")])])]),e("li",null,[e("p",null,[n("Start with "),e("a",w,[n("aws-node-fetch-file-and-store-in-s3"),a(s)]),n(" template")]),y,e("ul",null,[e("li",null,[n("refer to "),e("a",A,[n("commit"),a(s)])])])]),e("li",null,[I,e("ul",null,[e("li",null,[e("a",S,[n("lowdb"),a(s)])])]),j,x,e("p",null,[N,n(" only support ESM, so I have to alter the template accordingly. Pls refer to "),e("a",B,[n("source code"),a(s)])]),D,e("p",null,[n("There is no built-in "),L,n(" expect for 3rd party one "),e("a",O,[n("lowdb-adapter-aws-s3"),a(s)]),n(".")]),R,e("p",null,[n("see the source code of "),e("a",C,[n("s3Adaptor.js "),a(s)])])])])])}const T=o(c,[["render",J],["__file","lambda.html.vue"]]);export{T as default};
