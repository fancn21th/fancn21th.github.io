import{_ as o,r as i,o as r,c as a,a as e,b as n,d as c,e as d}from"./app-e3dbf12f.js";const s={},t=d('<h1 id="monorepos" tabindex="-1"><a class="header-anchor" href="#monorepos" aria-hidden="true">#</a> Monorepos</h1><p>Monorepos 是一个相对较 <code>新</code> 的技术 <code>名词</code>， 最简单的解释就是 把 多个代码仓库放在同一个 <code>git repo</code> 下面进行管理。</p><p>技术是为了解决问题，为什么要把不同的代码仓库 放在 同一个 <code>git repo</code> 下面？</p><h2 id="优点" tabindex="-1"><a class="header-anchor" href="#优点" aria-hidden="true">#</a> 优点</h2><ul><li><p>one place</p><ul><li><p>把 PC 端， 服务端， 移动端程序 代码仓库 放在一起管理</p></li><li><p>统一执行 <code>npm</code> 命令</p><ul><li>假设 你的仓库包括 一个 <code>前端工程</code>， 一个 <code>后端工程</code>， 你可以同时启动它们</li></ul></li></ul></li><li><p>一致性</p><ul><li>配置</li><li>文档</li><li>TS</li></ul></li><li><p>依赖管理</p><ul><li>统一安装依赖 <ul><li>你可以给一个 仓库 安装依赖， 也可以给多个仓库安装依赖</li></ul></li><li>统一的测试 <ul><li>你可以给一个 仓库 测试， 也可以给多个仓库测试</li></ul></li><li>跨仓库的依赖 <ul><li>假设 你仓库包括一个 <code>Library 功能库</code>， 可以在 <code>前端工程</code> 和 <code>后端工程</code> 中使用，你不必将代码复制到两个仓库中</li><li>更绝的是 当你更新了 <code>Library 功能库</code> 也不必手动更新依赖， 使用到它的工程会自动更新 ✨</li></ul></li></ul></li><li><p>CI/CD</p></li></ul><h2 id="缺点" tabindex="-1"><a class="header-anchor" href="#缺点" aria-hidden="true">#</a> 缺点</h2><ul><li>build <ul><li>当你的程序越来越大 编译越来越复杂 <ul><li>解决方案 nx vs turborepo <ul><li>smart build <ul><li>computation cache</li><li>parallel task execution</li><li>code generators</li></ul></li></ul></li></ul></li></ul></li></ul><h2 id="流行的-monorepos-方案" tabindex="-1"><a class="header-anchor" href="#流行的-monorepos-方案" aria-hidden="true">#</a> 流行的 Monorepos 方案</h2><ul><li>yarn workspaces</li><li>npm workspaces</li><li>lerna</li><li>nx</li></ul><h2 id="references-参考" tabindex="-1"><a class="header-anchor" href="#references-参考" aria-hidden="true">#</a> References 参考</h2>',10),u={href:"https://github.com/korfuri/awesome-monorepo",target:"_blank",rel:"noopener noreferrer"};function p(h,m){const l=i("ExternalLinkIcon");return r(),a("div",null,[t,e("ul",null,[e("li",null,[e("a",u,[n("awesome monorepos"),c(l)])])])])}const f=o(s,[["render",p],["__file","index.html.vue"]]);export{f as default};
