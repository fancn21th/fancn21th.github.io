import{_ as s,r,o as l,c as i,a as o,b as e,d as t,w as d,e as c}from"./app-e3dbf12f.js";const h={},_=o("h1",{id:"前因后果",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#前因后果","aria-hidden":"true"},"#"),e(" 前因后果")],-1),u=o("p",null,[e("自 2020 年 管理 前端研发团队以来, 提高 "),o("code",null,"研发效率"),e(" 一直都是我们的目标, 为了达到这个目标, 我们做了很多尝试. 浅尝即止. 屡败屡战.")],-1),p=o("h2",{id:"年鉴",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#年鉴","aria-hidden":"true"},"#"),e(" 年鉴")],-1),f={href:"https://patternlab.io/",target:"_blank",rel:"noopener noreferrer"},b={href:"https://atomicdesign.bradfrost.com/table-of-contents/",target:"_blank",rel:"noopener noreferrer"},m=o("code",null,"设计系统",-1),x={href:"https://learn.adamwathan.com/courses",target:"_blank",rel:"noopener noreferrer"},g=o("code",null,"组件化",-1),k={href:"https://courses.ahmadawais.com/nodecli/",target:"_blank",rel:"noopener noreferrer"},v=o("code",null,"自动化",-1),w={href:"https://github.com/strapi/design-system",target:"_blank",rel:"noopener noreferrer"},I=o("code",null,"组件库",-1),N=o("h2",{id:"问题",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#问题","aria-hidden":"true"},"#"),e(" 问题")],-1),V=o("p",null,[e("团队技术广度和深度有提高, 但是 "),o("code",null,"研发效率"),e(" 依然没有提高. 为什么?")],-1),y=o("h3",{id:"什么是规范",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#什么是规范","aria-hidden":"true"},"#"),e(" 什么是规范")],-1),E=o("p",null,[e("4 年前 甚至更早 我就喜欢 在鸡汤里面 拌上 "),o("code",null,"开餐饮店"),e(" 的类比. 殊不知, 当局者迷, 因为切入的维度不对.")],-1),L=o("p",null,"但是如果换一个角度, 客户不在意口味. 单纯从效率角度来讲, 连锁店的规范是不是有必要呢?",-1),j=o("p",null,"假设 餐饮店的头牌之一是 热干面, 但是每家分店操作流程都不一样, 那么不难想象, 最高效率的分店 和 最低效率分店 是有差距的. 这只是 单品, 如果 菜单上每件单品 都有操作流程带来的差距, 那么整个店铺的效率差距就会更大.",-1),q=o("p",null,"规范决定了效率, 决定了营收水平.",-1),B=o("h3",{id:"规范在哪里",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#规范在哪里","aria-hidden":"true"},"#"),e(" 规范在哪里")],-1),C={href:"https://github.com/juntossomosmais/frontend-guideline#2-architecture",target:"_blank",rel:"noopener noreferrer"},T={href:"https://github.com/vuejs/awesome-vue",target:"_blank",rel:"noopener noreferrer"},P=c('<p>所以, 问题不在于规范的缺失, 而在于规范的执行.</p><h3 id="执行的难题" tabindex="-1"><a class="header-anchor" href="#执行的难题" aria-hidden="true">#</a> 执行的难题</h3><p>前端项目的类型 我们分为 4 类, <code>大屏</code>, <code>管理端</code>, <code>小程序</code>. 以及小众点的 <code>网站开发</code>. 拿 <code>管理端</code> 来说, 技术栈有 <code>vue2</code> <code>vue3</code> <code>react</code> <code>angular</code> <code>基于 jquery</code> 等等.</p><p>具体到一个项目, 我们至少会选择 <code>路由方案</code>, <code>基础UI组件库</code>, <code>表单库</code>, <code>状态管理库</code>, <code>API组件库</code>, <code>编译框架</code>, 等等. 框架基本组成部分的解决方案, 每一个有很多选择.</p><p>更细分的组件库类型 更是数不胜数.</p><p>更微观的层面, 哪怕约定了所有的技术栈细节, 两个人写同样一个业务模块, 往往也是大相径庭, 有的人是 <code>命令式</code>, 有的人是 <code>声明式</code>. 有的人喜欢 <code>面向对象</code> 也有的人喜欢 <code>函数式</code>. 或者 根本就是 <code>无招无式</code>.</p><p>实际情况, 你永远不知道下一颗巧克力是什么味道.</p><div class="custom-container tip"><p class="custom-container-title">提示</p><p>&quot;Every line of code should appear to be written by a single person, no matter the number of contributors.&quot;</p></div><p>这是我从 本文第一个链接中 摘取的名言. 这对于大部分团队来说, 都是遥不可及的天花板.</p>',9),S=o("h2",{id:"反转",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#反转","aria-hidden":"true"},"#"),e(" 反转")],-1),A=o("p",null,"思路凌乱必然是想错了. 复杂的问题, 虽然复杂度不可能消失, 但是可以转移. 问题的正确方案, 其思路一定是简洁的, 把复杂度隐藏在低纬度.",-1),U={id:"原则-1-规范化-消灭重复-一致性",tabindex:"-1"},z=o("a",{class:"header-anchor",href:"#原则-1-规范化-消灭重复-一致性","aria-hidden":"true"},"#",-1),D=o("h3",{id:"原则-2-业务-技术",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#原则-2-业务-技术","aria-hidden":"true"},"#"),e(" 原则 2: 业务 > 技术")],-1),F=c('<p>但是, 要非常注意! 业务角度是相对的, 宏观来讲, 业务层就是业务需求, 技术层就是技术方案.</p><p>但是在研发领域, 有的时候 业务和技术 都处在 技术侧. 所以 我们可以换个角度看待 业务和技术.</p><p>宏观或者微观也好,</p><ul><li>业务是指要达到的目标</li><li>技术是指达到目标的手段</li></ul><h3 id="原则-3-一致性-最佳实践" tabindex="-1"><a class="header-anchor" href="#原则-3-一致性-最佳实践" aria-hidden="true">#</a> 原则 3: 一致性 &gt; 最佳实践</h3><p>这一原则很有争议, 而且对 开发人员来说 由于 <code>惯性思维</code> 往往难以接受. 但是, 最佳实践这个词本身就是相对的, 同一个问题, 哪怕现在的实现方案是有瑕疵的, 但是保持一致性始终优先.</p><p>直到为了实现新功能 而不得不重构的时候 我们才有必要替换原来的方案.</p><p>反过来思考, 你反对保持一致性的出发点到底是什么?</p><h3 id="原则-4-重复-重构" tabindex="-1"><a class="header-anchor" href="#原则-4-重复-重构" aria-hidden="true">#</a> 原则 4: 重复 &gt; 重构</h3><p>有的时候大家都习惯于 这样的说法, 一段代码如果出现两次, 就应该重构了. 但是, 抛开时间成本不说, 有时候冗余的代码会带来更好的可读性.</p>',10),G={href:"https://martinfowler.com/books/refactoring.html",target:"_blank",rel:"noopener noreferrer"},H=o("h3",{id:"原则-5-平衡-极端",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#原则-5-平衡-极端","aria-hidden":"true"},"#"),e(" 原则 5: 平衡 > 极端")],-1),J=o("p",null,"没有最好的方案, 只有最适合的方案. 一切都是权衡.",-1),K=o("p",null,[e("如果你从上面的原则得出这样的结论, 一个项目中 要么都是 "),o("code",null,"面向对象"),e(", 要么都是 "),o("code",null,"函数式"),e(", 这可以认为是走极端. 一致性并不针对整体, 而是针对具体的问题. 别忘了, 还有一个因素, 时间. 在有限时间压力下. 保持局部一致性, 就相当于保证了整体一致性.")],-1);function M(O,Q){const n=r("ExternalLinkIcon"),a=r("Term");return l(),i("div",null,[_,u,p,o("ul",null,[o("li",null,[e("2020 年 研究 "),o("a",f,[e("Pattern Lab"),t(n)]),e(" 与 "),o("a",b,[e("原子设计"),t(n)]),e(". 直至今日, 我们对 "),m,e(" 知之甚浅.")]),o("li",null,[e("2021 年 基于 "),o("a",x,[e("高级 Vue 组件设计"),t(n)]),e(" 推行 "),g,e(" 开发模式.")]),o("li",null,[e("2022 年 基于 "),o("a",k,[e("Node CLI"),t(n)]),e(" 推行 "),v,e(" 开发模式.")]),o("li",null,[e("2023 年 基于 "),o("a",w,[e("Strapi 设计系统"),t(n)]),e(" 打造 定制化的 "),I,e(".")])]),N,V,y,E,o("p",null,[e("想开连锁店 必须要有规范, 我们知道没有规范, 每家店 口味就不能一样, 客户就不会认同这个品牌. 味道是以前最喜欢的切入点. 但是这样一来, 和研发层面的 "),t(a,null,{default:d(()=>[e("规范化")]),_:1}),e(" 似乎就没有关系了.")]),L,j,q,B,o("p",null,[e("很容易就能从 互联网找到 类似 "),o("a",C,[e("前端开发指南"),t(n)]),e(" 一样的开发规范. 或者 awesome* 系列 例如: "),o("a",T,[e("awesome vue"),t(n)]),e(".")]),P,o("p",null,[e("放弃吧, "),t(a,null,{default:d(()=>[e("规范化")]),_:1}),e(" 是不可能完成的任务.")]),S,A,o("h3",U,[z,e(" 原则 1: "),t(a,null,{default:d(()=>[e("规范化")]),_:1}),e(" === 消灭重复 === 一致性")]),o("p",null,[e("首先 "),t(a,null,{default:d(()=>[e("规范化")]),_:1}),e(" 另外一种解释就是 同样的事情 再做一次 做法基本一致. "),t(a,null,{default:d(()=>[e("规范化")]),_:1}),e(" 本质上就是 消灭重复. 不做重复的事情 自然就 保持一致了.")]),D,o("p",null,[e("从业务角度出发而不是技术角度出发, 业务往往是收敛的, 有限的, 重复的, 有规律的. 技术是百花齐放的. 所以从业务角度去思考 "),t(a,null,{default:d(()=>[e("规范化")]),_:1}),e("和一致性, 会更容易.")]),F,o("p",null,[o("a",G,[e("重构"),t(n)]),e(" 不是一个简单的话题, 所以这里仅仅是聚焦在大的方向.")]),H,J,K])}const W=s(h,[["render",M],["__file","index.html.vue"]]);export{W as default};
