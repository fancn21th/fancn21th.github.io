import{_ as s,r as d,o as r,c,a,b as e,d as n,w as o}from"./app-e3dbf12f.js";const i={},l=a("h1",{id:"基础",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#基础","aria-hidden":"true"},"#"),e(" 基础")],-1),_=a("h2",{id:"ui-和-状态",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#ui-和-状态","aria-hidden":"true"},"#"),e(" UI 和 状态")],-1),h=a("p",null,"如果说 组件化设计 有基础, 那么最基本的设计思想就是 把 UI 和 状态 分离开来. (这里用图例描述)",-1),u=a("p",null,"而状态是 它的输入参数. 以及构造这个输入参数的逻辑.",-1);function f(m,p){const t=d("Paradigm");return r(),c("div",null,[l,_,h,a("p",null,[e("如果一定要准确的解释 这个模式的精髓 你必须理解 "),n(t,null,{default:o(()=>[e("函数式编程")]),_:1}),e(" 的思想. UI 可以看作是一个纯函数 "),n(t,null,{default:o(()=>[e("纯函数")]),_:1}),e(".")]),u])}const b=s(i,[["render",f],["__file","index.html.vue"]]);export{b as default};
