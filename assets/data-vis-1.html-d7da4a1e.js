import{_ as o,r,o as s,c as l,a as e,b as a,d as n,e as i}from"./app-e3dbf12f.js";const c="/assets/general-arch-7a908d54.png",h={},d=i('<h1 id="data-visualization-part-ii" tabindex="-1"><a class="header-anchor" href="#data-visualization-part-ii" aria-hidden="true">#</a> Data Visualization Part II</h1><h2 id="解决方案架构" tabindex="-1"><a class="header-anchor" href="#解决方案架构" aria-hidden="true">#</a> 解决方案架构</h2><blockquote><p>AI 应用层</p></blockquote><p><img src="'+c+'" alt="Architecture"></p><h2 id="text-2-data-vis-解决方案" tabindex="-1"><a class="header-anchor" href="#text-2-data-vis-解决方案" aria-hidden="true">#</a> Text 2 Data Vis 解决方案</h2><h3 id="steps" tabindex="-1"><a class="header-anchor" href="#steps" aria-hidden="true">#</a> Steps</h3><ul><li><p>text to params</p><ul><li><p>given prompt template and example selectors</p><ul><li>extract <code>measures, metrics, dimensions and conditions</code> from text</li></ul></li></ul></li><li><p>text to sql</p><ul><li><p>given prompt template and example selectors</p><ul><li><p>prompt template (pseudo code)</p><p><code>select {metrics, dimensions} from {#source table} group by {measure} where {conditions}</code></p></li></ul></li></ul></li><li><p>data to chart</p></li></ul><h3 id="key-components" tabindex="-1"><a class="header-anchor" href="#key-components" aria-hidden="true">#</a> Key Components</h3>',8),p=e("li",null,[e("a",{href:""},"LLama2")],-1),u=e("li",null,[e("a",{href:""},"SQLDatabaseChain")],-1),_={href:"https://python.langchain.com/docs/integrations/chat/ollama",target:"_blank",rel:"noopener noreferrer"},m={href:"https://python.langchain.com/docs/integrations/toolkits/pandas",target:"_blank",rel:"noopener noreferrer"},f=e("h2",{id:"todos",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#todos","aria-hidden":"true"},"#"),a(" Todos")],-1),b=e("ul",null,[e("li",null,"TBD")],-1),g=e("h2",{id:"references",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#references","aria-hidden":"true"},"#"),a(" References")],-1),x={href:"https://github.com/facebookresearch/llama-recipes/blob/main/demo_apps/StructuredLlama.ipynb",target:"_blank",rel:"noopener noreferrer"},k={href:"https://github.com/langchain-ai/langchain/blob/master/cookbook/LLaMA2_sql_chat.ipynb",target:"_blank",rel:"noopener noreferrer"},L={href:"https://python.langchain.com/docs/use_cases/qa_structured/sql",target:"_blank",rel:"noopener noreferrer"};function v(y,q){const t=r("ExternalLinkIcon");return s(),l("div",null,[d,e("ul",null,[p,u,e("li",null,[e("a",_,[a("Ollama"),n(t)])]),e("li",null,[e("a",m,[a("pandas"),n(t)])])]),f,b,g,e("ul",null,[e("li",null,[e("p",null,[e("a",x,[a("facebookresearch / This demo shows how to use LangChain's SQLDatabaseChain with Llama2 to query structured data stored in a SQL DB."),n(t)])])]),e("li",null,[e("p",null,[e("a",k,[a("langchain / LLaMA2 chat with SQL"),n(t)])])]),e("li",null,[e("p",null,[e("a",L,[a("langchian / qa_structured"),n(t)])])])])])}const V=o(h,[["render",v],["__file","data-vis-1.html.vue"]]);export{V as default};
